name: 'CodeCov'

on:
  pull_request:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: self-hosted-linux-x64
            triplet: x64-linux

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}

    steps:
      - name: 'Install SDL2 dev'
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsdl2-dev
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - name: 'Install CMake'
        uses: lukka/get-cmake@latest

      - name: 'Setup vcpkg'
        uses: lukka/run-vcpkg@v10

      - name: 'Run CMake'
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg
          testPreset: ninja-multi-vcpkg

      # zip current directory and upload as artifact
      - name: 'Zip'
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          zip -r build.zip .

      - name: 'Upload artifact'
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build.zip

      # - name: 'Log files and dirs'
      #   run: ls -la

      # - name: 'Install lcov'
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y lcov gcovr

      # - name: 'Run executable'
      #   run: |
      #     ./cmake-build-debug/platformer-engine-tests

      # - name: 'Run gcovr'
      #   if: runner.os == 'Linux'
      #   run: |
      #     gcovr -r ./cmake-build-debug/ --xml-pretty -o coverage.xml

      # - name: 'Run CodeCov'
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: coverage.xml
      #     flags: unittests
      #     name: codecov-umbrella
      #     fail_ci_if_error: true
